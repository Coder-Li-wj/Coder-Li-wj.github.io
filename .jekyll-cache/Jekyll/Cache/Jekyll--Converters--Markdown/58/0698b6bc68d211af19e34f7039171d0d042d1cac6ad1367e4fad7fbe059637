I"c!<h4 id="什么是-less-">什么是 Less ？</h4>
<p>Less 是一门CSS 预处理语言（不能直接渲染页面，要编译成css文件才可以），它是对css的扩充，增加了变量、函数、嵌套等功能，让网页开发中的css更容易维护，提高开发效率。</p>

<h4 id="如何安装-less">如何安装 less</h4>
<p>命令行：<code class="highlighter-rouge">npm i -g less</code></p>

<h4 id="编译-less-文件的方法">编译 less 文件的方法</h4>
<ol>
  <li>命令行方式</li>
  <li>使用 Koala 外部编译软件</li>
  <li>Webstorm 内置 File Watch 功能</li>
</ol>

<h4 id="定义变量">定义变量</h4>
<ol>
  <li><strong>为什么使用变量？</strong><br />
把重复使用的css属性值定义为变量，可以重复使用，方便后期css代码的维护。</li>
  <li><strong>定义变量的语法：</strong><br />
<code class="highlighter-rouge">@变量名称：变量值</code>（注意：变量的值一定要符合css属性值的规范）</li>
  <li><strong>变量的使用：</strong><br />
在css选择器中属性的名称：<code class="highlighter-rouge">@变量</code></li>
  <li><strong>注意事项：</strong><br />
把文件路径定义为变量时，变量与字符串拼接时要使用 <code class="highlighter-rouge">{}</code> 把变量名包起来，比如：<code class="highlighter-rouge">url("@{imgURL}bg.png")</code></li>
</ol>

<h4 id="混合">混合</h4>
<ol>
  <li><strong>什么是Mixins混合？</strong><br />
简单理解就是函数，可以封装css代码，在别的选择器中调用，提高代码的重用性和可维护性。</li>
  <li><strong>定义混合的语法：</strong><br />
1）普通
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="p">.</span><span class="err">混合名称</span><span class="p">(){</span>  
    <span class="c1">//封装的css代码  </span>
<span class="p">}</span>  
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <p>2）带参数的混合</p>
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="p">.</span><span class="err">混合名称</span><span class="p">(@</span><span class="err">参数名称</span><span class="p">:</span><span class="err">默认值</span><span class="p">){</span>  
    <span class="c1">//封装的css代码  </span>
<span class="p">}</span>  
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>如何调用混合？</strong><br />
在选择器中直接通过 <code class="highlighter-rouge">.混合名称()</code> 调用，如有参数就加上参数 <code class="highlighter-rouge">.混合名称(#fff, 18px, ...)</code></li>
</ol>

<h4 id="匹配模式">匹配模式</h4>
<ol>
  <li><strong>匹配模式的含义：</strong><br />
相当于定义相同的混合名称，根据分支的值决定执行哪个分支，但是有一个公共的分支（任何一个分支都会调用）。
<code class="highlighter-rouge">@_</code> 表示匹配所有，通常用于定义公共部分。</li>
  <li><strong>模式匹配的定义和使用形式：</strong><br />
1）定义：
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="p">.</span><span class="nx">fun</span><span class="p">(@</span><span class="nd">_</span><span class="p">,</span> <span class="p">@</span><span class="nd">color</span><span class="p">){</span>
    <span class="c1">//任何分支都会执行的公共部分</span>
<span class="p">}</span>
<span class="p">.</span><span class="nx">fun</span><span class="p">(</span><span class="nx">f1</span><span class="p">,</span> <span class="p">@</span><span class="nd">color</span><span class="p">){</span>
    <span class="c1">//f1分支独有的代码</span>
<span class="p">}</span>
<span class="p">.</span><span class="nx">fun</span><span class="p">(</span><span class="nx">f2</span><span class="p">,</span> <span class="p">@</span><span class="nd">color</span><span class="p">){</span>
    <span class="c1">//f2分支独有的代码</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <p>2）使用：</p>
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nx">h1</span><span class="p">{</span>
    <span class="p">.</span><span class="nx">fun</span><span class="p">(</span><span class="nx">f2</span><span class="p">,</span> <span class="err">#</span><span class="nx">fffff</span><span class="p">);</span>
    <span class="c1">//h1选择器编译后的代码包含公共部分和f2分支的代码</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ol>

<h4 id="颜色函数">颜色函数</h4>
<p>色彩三要素：色相（颜色的名称）、饱和度（鲜艳程度）、明度（亮度）。</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="c1">//--------------------亮度------------------------</span>
<span class="nx">lighten</span><span class="p">(@</span><span class="nd">color</span><span class="p">,</span> <span class="mi">10</span><span class="o">%</span><span class="p">);</span>  <span class="cm">/*比@color 亮10%的颜色*/</span>
<span class="nx">darken</span><span class="p">(@</span><span class="nd">color</span><span class="p">,</span> <span class="mi">10</span><span class="o">%</span><span class="p">);</span>  <span class="cm">/*比@color 暗10%的颜色*/</span>
<span class="c1">//--------------------饱和度------------------------</span>
<span class="nx">saturate</span><span class="p">(@</span><span class="nd">color</span><span class="p">,</span> <span class="mi">10</span><span class="o">%</span><span class="p">);</span>  <span class="cm">/*比@color 浓10%的颜色*/</span>
<span class="nx">desaturate</span><span class="p">(@</span><span class="nd">color</span><span class="p">,</span> <span class="mi">10</span><span class="o">%</span><span class="p">);</span>  <span class="cm">/*比@color 淡10%的颜色*/</span>
<span class="c1">//--------------------色相------------------------</span>
<span class="nx">spin</span><span class="p">(@</span><span class="nd">color</span><span class="p">,</span> <span class="o">-</span><span class="mi">10</span><span class="p">);</span>  <span class="cm">/*色相值增加10*/</span>
<span class="nx">spin</span><span class="p">(@</span><span class="nd">color</span><span class="p">,</span> <span class="o">-</span><span class="mi">10</span><span class="p">);</span>  <span class="cm">/*色相值减少10*/</span>

<span class="nx">mix</span><span class="p">(@</span><span class="nd">color1</span><span class="p">,</span> <span class="p">@</span><span class="nd">color2</span><span class="p">)</span>  <span class="cm">/*混合两种颜色*/</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="嵌套">嵌套</h4>
<ol>
  <li><strong>什么是嵌套？</strong><br />
具有层级关系的css样式，css的层级最终是有html的结构决定的。</li>
  <li><strong>嵌套用在哪里？</strong><br />
用在具有后代关系和父子关系的选择器中。使用了嵌套很大程度上减少了代码量，并且代码结构看起来更加清晰。</li>
  <li><strong>使用 <code class="highlighter-rouge">$</code> 符号表示父元素：</strong>父子、兄弟、邻居、伪类。</li>
</ol>

<h4 id="运算符">运算符</h4>
<ol>
  <li>作用：可以对角度，颜色，宽度，高度等进行运算。</li>
  <li>运算符的分类：<code class="highlighter-rouge">+</code>、 <code class="highlighter-rouge">-</code>、 <code class="highlighter-rouge">/</code>、 <code class="highlighter-rouge">*</code></li>
</ol>
:ET